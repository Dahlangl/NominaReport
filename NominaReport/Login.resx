<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAPZQTFRF+k5A
        ////905A/VtO/VtP+k8//VxM//78+k8+//38+00/+k5C//77//7/805B/9/a/9rW/+7q4XJo//j29rmy
        +MC780g6309E5G1m5G5j71NH50o+8E5B77Su6E9D409D7aSe7Z6X/9LN8YyE7aul6WZd96ef/+fi/+fl
        +JaO8JqS14N72X513EU4/8vG7GVa3FdM7IB489bR/GVZ9Hht6mFV+K6m32FX/7yz3FRJ9JmP5F9W446F
        +ZOI9M/J+IF3025l3o+L6ouEy0xCyomD7dnV7sG883lt1JmTyXxz4qai+G1i3bCrzUQ39YeA1mFX3cK+
        yVdOehFYpwAAFM5JREFUeF7tXAt72ri2BaWMkTECYwgBG5vwiAkNBNIQTh6laTqTmdMzp537///MXVuS
        jUMISWby3Vv382oKtrT3lpb21stWkvuw9+6XPeCXvXf4//P8RPiQ2xPsZ4bYy/3CciyXKxZyPyfYO2II
        /MwM94ih+bMSjBn+vMgYph8Zw/QjY5h+ZAzTj4xh+pExTD8yhulHxjD9yBimHxnD9CNjmH5kDNOPjGH6
        kTFMPzKG6UfGMP3IGKYfGcP0I2OYfmQM04+MYfqRMUw/MobpR8Yw/cgYph8Zw/QjY5h+ZAzTj4xh+pEx
        TD8yhulHxjD9yBimHylnWNLfyasNpJphIeZl6u8tSC3DiFupVDABfbcFaWQYB2QBviuV1J9OKLEnAjW9
        UVqQPznhXy5bB61LX6jkR0gvQ/ojEIWCCPqrShhWzq6aorD1ryakiaFZLMmY1LfkQ3E9NTjP83Le6C1F
        Uac/QJoYMuH7QRD4vhf1uIJ345TzCs6ht3W8SRFD5p1fjQkfPxBD+m+6A0vxM/K84aadYS64sCTCVlRj
        061zxTCf51M37VHKmg1Dcglra4ZdRyYBvJ56H7LLlQxJnmDondiKdZ7bN97WGXEHQwzHDxolHsdKuUIx
        V5TmcC//dE8JH+u/4QM1CJM8CSRRTFiMq7MxyMv5G0uVIhVjmqVITrQqkg0fxQxzrD2uOJTqVMZt9too
        LdJqiIBrfDIPA5nvkTAoUrWQAghJiBJUTU0SzgmXhj2S1xYA5NMNAcJoPxgVnudRnhIhRSomUoyrjOuS
        f4iIxMgJH2o7MMmCg8NOvdM5bPlso6U0nmZYEp47IbiiBDJucH58dHR83nQFK6EEmfLx6urjaSBTIqBY
        KAannyB9NP54vpi4nl5uFAtQcif457ols8CEO2menp//R1IEQDdSvPp4fkmKJZhTFt1JrWoZ5C4e3pIF
        mBFM5ihEpWziaYaiNR2FIyA894Q/rzucc8yuzrTmM2q7k4aFEgG7fpBYMoFFrTt1LMgaEODIvhlG2d5F
        OAoJR57JgnkntCBjLQRiHsGpFMkkjxQ9xihMW4eDTtVSE0MZXY6qhYp9c8Xp8eeTGnDy+fh0uxN3MKxV
        MMuUQes4CA7DaFTmPBwHTASDEY/6OK/cBZEN5rcGoRMP4QC37N7NpeRoug0L7QTyPRcWQjQDCYBhIVLU
        NjHBGYblQJEcvH/oWEqWEE3xeePYF62qY4eVSmg71Zb4GwylNV7/0pe9WaFs2XduMHCwVIrK4uGJXk8w
        t1+xSDauRj6Putn1GVEkhtIQtyeyV9FMDYaogFSUt+BGGfAuPpXivp4Tynp6V3J569j3DqryHgBDWYVN
        PMOQwM9+jYZkBcNedteUZaXspjTCLsdW5D9ZUQScuqlcwxlgqHOt2Z2troy8AR8qRcVNJgJlfJatytIj
        hokWi0EMW2uGB+KVs0XM0LB/i4tW4HUK4ATKxpXPTETaWNc7RlznxjUGx5ghv7uPI9lYMFKEJAknnU99
        zoJi5ENColz+kOHf9iHcEFdGopwvP+hoQJmvZmAoaqGuIJRowICqqlGZFsYsYohga4xkOsE4FVCEBykG
        0ZYYe6AG5ytVp+vtd/nD+FQAQ/RDffM3Gcb1Vd/RhYHehCIxDslbgIdzVjTdHrYxEpa9Gn/6/dPH+siB
        NFXPqtREgmGijTDSuFN5C+sGKZ5DMXTQRDK7UvO6GMilAGJ6XejjKN2GF0QpTHF72ulMEUiyTBrPDaQ0
        eqp74IM74/2cN1TjCG6rN7PA9TB513q6x3La3WiGNETLRAm+aA8lYdgxKlBse22/WbtXivB+1x3bju2o
        RiFdR+Oj+5ChGu028BxDKgURc3Pdbl/f6HCFAw3n/aLtLw/lPWpWNgb7LDhSUzI8dBtgrUJwb0eaDNb+
        xFB7gFxBQcwtbi2aR1AjVcO6bcaKISXwMk0tpyfv37//QwY2/G//gTvgZOElo/TgtTvgtQ8NZzChvwAa
        dKKWLztdHwli0oj7R2efzc44DYBly/rr3ycR/n2v8stlZwKGlhXPMc5odXFE+732bKUaBsP2Y0UITmht
        56M+UswIax4leLSkeYMohVEskwRWkqb3Ph4pQ3QqjP7eZ4SOql2HsYOKagF42F4j7nG8mYMPlROxYbW7
        rcsmFqBYgra0IkJZKxFi0xhssUyMW5z2FjoezTdimO9h2YUIELchpRCmmMMAbF6i0QcM52p8pHlMY71E
        Afgpi6IUce98dWkTUSiwEqshIEkS/6OeLKFNG6e0sIkZGqNazEUkZvx/MtI0AqmcaLBGWyolZCTDyF1U
        M0SjDMgoKPPGUNBIo+7pwREcQVskUzVNktpDGOcPGCb2h28SpYSIz06GYn/NENWgj3KZlrX0LAw/eetU
        MtTQFrCN0gw1aN0KYIzBDy0MYYEYFnTpaIjR/M0Z1h8xjFKSDNmcRj8aerhd2YYFRamSJnkyQCCG0oHU
        ObXoQ9D+SnY5hC3C2B7TUl3irRi+zIcsHjCMP/+r9mzYxCUgaKTREvnBPhlAlIJhq4LQpU7Hn1KksoY9
        ciyF/arm7hOwo3wDhtRtGm25pH2GYW62iupvt3y9C/eG/Qjf4jUNYCmG0hfskmYLMMQmpOXr/ftDRYix
        xVSpGnmn2ukMAGxc38yHqhWfYdi8oBCVI0l1HihP1Hp67LfthpzxkUkhiRUCGZCQSwUwJI6xYmuq1Wwb
        SwVi2G6QZajKAQwaG+vSf8Yw8iHGDp0ilTzI6JSOKHinDqYK2aW4NaoPuoNOjzbrEpZ9E6/aoJJkWBIL
        7B0ixbAB73R6NNIoODc0lKpdIsrS5QG0A36r2eIlUYpZeIIFtJ7QytyyHKzI1B1qg11QHKWoY4JhoZRz
        76UctR/aAis5vTCgNGN6raqOkUzFeGzzLRkqPmtzWxmaYl5Zz/GWZRATfW+Fc0E7YH1r8IQPsTaqyUFK
        E1Bfmgm3oSjBLqdkUafT95vtLYzkbIFmRjEypbSWMcCwkGPePGas+qN0C8DtIY3465EmGaWw5M2rcdPE
        oAay7KGrhXLeQj9rkCbh7s394d9eeSs+hWjOJSCF3tYlfShb0MduKSIRcQQ/Zzp3S5jbYx9uMNxQjGE4
        PVLUKLn9qhPHPXL/uQ+xnKDtNpcMi8SQHvMRKEUx1CmWYljyWt1Q7opkReQm3zJGn5eUC4b/0s/arGi2
        iOEtuyFt7mUPhH9I2Qo/L+kRtORIz75h3UY3VWJc7YDpmgAfxo/Hk3iaIVsc1TU+qtZJpPTVk7tkClnB
        BC68yaeL1SjEjpU2CmFldTQM5JPyXMkUH7V0vf7tQaksV1SKoVSE5giK56SY3NYWhDs5/TS+uFA2zkVp
        XYGjhQyrR3iaYc7zmxqulohTgkcpSqZIS5ScG8wO5ne087vr15aXgRf/1X7mB1o8iN9yKtArilw7mLUi
        xXmLFHWm/kYcqfcFkQ2WqIDvbeO3k2GuhMFDnnSIntJF5x6gELUsZHBfotcpuNONKGVoWSUvkuYjA2wz
        oOQrChRXlIpMasoMklPvfEqqULSFtABQCu2/9I0S3sQuhrtBS8oE9O2WMtbvpN4O26g8gRcwfJytqrxR
        8Sd5JDKe56olHjj+pdhu/e/4cMN7SezIAnblaq9Eg8WTddrwXvJ2e7A8yzCptt3EblYvQymug7b2oKS4
        XFyA0vZqPIVXMSxsHY5fEHvPIlEFaW1dEF3EdVDfcd6L8CqGrzX+BpAufZ3TNvCiflgoPl3GOkRVl0hK
        bvSZbdgUSdzv0o7z1uH9lMLLRprt0SmxmYP7OGmr4Sj3geIT8b/GjuxnNF/G8Els9e3uoNK5D8enIlZD
        icMAj7HD5u7inme4q9idUMdRNtV39qsXlvW6Kr3Gh7vbahOPpWUKfWzE5CNJdTzlsYE1Enm7xAivYLhz
        3ntJu65dlzAFxU2Xeq6LzczO4raa2l6LZxnSdiGhCdNqBSzLSO5sklA+MHU9EgToUt4qTapelGuaJhbd
        uGDzSmWud0Kq4OKDo1R0XmmzUaTg1u3hboZSQ511wn9ZSmx6o4zoTqqs64PbtVxSw4x2VHFi0RS/3921
        mbnf4dgfx4GM76SiKmKtpa+RuD4f9gDPMSwVTCKDjRlVW53oIuhvsimvqEJUgi4EnjbxQ++WaOOnlQC5
        7IJO0TRldMiWMlEIPt0L2/6PMFk/DOV+WuYiEKJS9X9NBFdIljtSypDQpT/ALoYlvcej2MEnXbDcvmzd
        QlEGlMrdVy1aLCh5WYzOgUJBfikRlUTlQR8ZRE/KUZrpdjinU1DeZBLtfQFlR7lU26Tgpsop0wB9Uf5r
        GbZn40Hn7vt8/K3NhldXtdrgaLg8Hp9je97uq8S7g1a3M5g3aWRgwUG30xkPfWayRX/c+n7VGYwvm5dX
        g87hsF1CN/Ovx3TGLmCm+DQez/qDcZt5l/OBtCB+PzzjfDAeCpQ11FXImaJZO4Sdax83LGhpAxiOrsbz
        ZR+mWz5Z6P4egN4rGYohnTKz76vO9FSMbXtaNcKT97ZzFJTY9crpDZE4mlYcywqPfIbiD0e4tqt9tyBO
        QqexsvPcub+9t628U6V3xt585RiGUzl2C+6/bOerzc9m3nVjZBl8dNH0LujknGPfeIe2PY6eUwn3IkQt
        nFXNK9G5KZTgVMZoI9d2eisbOZXWYOTg607oHrCBpxmKZc9ywrOKww2QoTNa3K7e/urwo6BQWJ4Z1RYl
        cvvsN8dyuh5izOLh2ZnNrbnvneDLxo3lOM7Z2ciyeq7p3dmQRpo1d90G53nH7s2aFQsCFctq+GPo8rPV
        XHQd53CfKlsosuaF5UilcO75fYsMjAxn4JoTh+cpw+COMzoLHaqPqvgGnmQo39FXT2bfB45maHf6n67f
        E8McW57lqzLxDBJdy6pMvKHDw/nsS9c2qtfEMLxZLrt22bn/Pru1DSdgk6rl3My+3IRG75IYht1vn2Zj
        y7lfXtbA8zr4cm8Yt01fdDkYqkqweWhVTr5QEQN3WDXswy8z2LYXYgK/fV5++RwafFX7crvizvtXntWn
        59N87hfE94olGRqNpih4kmEpZmh1MDIEcAGdGLG+ukw07/N2nxg2LoU4qNB5n5w7NYxT79SyVv91/dm9
        ER7AuHEXMDZbGZXbwA3+sIyPvt8xDIw0+2uGOdal+BAisK3q5Mq2GoFg7lfLOvYnTn40YWIxzdt3ggVj
        Oq8jB+dN7GAYcmeCVlyeKYb0DNdUDNc+RKJZdL9y69uXlUFHNsx9tMXAPbGtepPE6EEtnag3hsFHw/jr
        j8+ff/0LTTBpcGvoFVktzP+GtM9/OsZF4Ncp0UwwZO2GMZrTibkgaHsdwx6zAp3ttu6bYFhxTRY06KV3
        yf9m0ImkbU7cwRDB4MI2upzyIZF54ENPJkKSPPA/Z5Z8rr5/Z+c7SYZDYgjnNI9oIAHQma7AkJ+KAh1u
        UCecLKseuHXLGIrcJkN5LoEVmFc37D7S6UH7Cgw5MWxHDOVYIJU28DTDiW2EE8kw9mGRGFpJhhy0TRe9
        BAw5GJrE0CCGvN5k1DrKh6h6c8zzv/Ukpt/cBjgLLNBGeRv3lHblQ8ySDC3nEH7DWCMJEMOS8IRkiGtx
        G/IzMDTWDHPkw25iEk1ghw+r3MA8R7WMGJoUpcaFrjoxLEsfNizr/Ms9t09QhjdwnK5miCHX0lFqDYNv
        XL2mp5PjxPAUxhGlq+/01ncyQQer04wf+5CxUoFY3SEyvNpJzRsgEukacVQPNhmiVV7dD7HCOGx6/u2I
        J/rhiW3cf0FiqMfSTtNrz0bcuQyODY4bb7nCkKoYSv9XW5i7yDn+wuGjpYsp/qrpgaF1KkrscsXtGx8j
        yXyO+QYMW77Yl7NFzl8s/BxDuZ2maF+G9tTt23y69LzmPbq9u8Hwo+yHuu4P8CRDOu/Ew8Prec9RDKnL
        FehVpj2+nk8dPdLY41kLfWrqiqbNnfH1suHw6SXpaoa9ITGkmHSnkKtdthp2vS0ZeiXqP9zuz66PwvBD
        zh1wfjH8oObD/Xlv1WesFXL7EEUYvOvOVpZTn12jKmGT6ZEmZshfHaU55ncdejnmOHTqS3Y59Iz2BQYF
        rCQcCj8wxHoAQpWaQIuE3KLj55VAKIYymKFLDOExsZw6nH5vybkghojSUo5htc3pvKpTaee8G7tsWIeu
        YtgxrLrH3N+xdqBDYvUF8xZ0tt/gRoUcHjO0VT+0XhulyFocVm27+ueIGPZ71StEaUEMLyq23etOq/9a
        0MSwqod22JjTWjSYN5BVrde8gjjoVY8QY4s6xJjpXVWrHwTzhoMqpHuHaIIjSsHGRczG0xEMDlpeTiyO
        KnZ47B1Xe/39/X612kdPdfvSapd+o8Gr1VGjSp2K83rVBsKyfVSdnrOC94mkXxmlMBi0Tk6W6HLThfjQ
        ai1oGZUT7drJyTA4bZ22ieFXv3YyX8hXZSWZ1ZK/jdEethaimGuTGDZRi1aLXrIKDwZrpx4WsZSCrXQx
        B8+QQWTjOjg4qcmyglyxPaTEHCZ1sqreQDKfDLQFw2ay1SLSYtGCWJG1Ub/tPHZEaftqsPTd6w4tXDCw
        CS3GMHDL11ny1yAG+0LIX5mhjRoTlCeFIE6skUf3kKE74qgFkCITADKojctLXRZKUDr0m0ORsLyWsiVt
        AbJ0Lyu0FTsYnlatnjz7TMcotkEuX/Z1aMR78h8NOxgusOaWA0M//o2YJEqaob79YbGjHwp3cXS/ahxf
        qj6wgSKWoPNGg5ZRP6r3FHaNNAVBL8yf+EV3s4Ce2my6pY1HUj8cdjHExkK+cFcdfhuod6sHSj8udjKU
        D8IeQSU+TfsHw06G28fHbYk/cKTu7Icvjr+XS/7f429EKeIzGaKpHmleFHzPvtz8f8Zuhi/CjxyiwBsw
        /MGRMUw/MobpR8Yw/cgYph8Zw/QjY5h+ZAzTj4xh+pExTD8yhulHxjD9yBimHxnD9CNjmH5kDNOPjGH6
        kTFMPzKG6UfGMP3IGKYfGcP0I2OYfmQM04+MYfqRMUw/MobpR8Yw/cgYph8Zw/QjY5h+/PQMC2zvJ2dY
        /OkZ5rYxTP5OaNqvt/bD5O+Epv0aAMNffnqGe+qPsfysEHu5D3vv9vb2ftnbe/eOPn+yn3fvPvwvhdsz
        3zv0suUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="lblErrorMsg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAPRJREFUOE+F
        k4ERgjAMRRmBUdhANpBNZAPZRDfSDWATfL8mlhKK7y5H8/PJ0TY0NdZ17YiLRWfyfzCPxEzskXYzW4Ri
        S7zkhIWYiIHoCTWVJuRp7bUM4juVMZgUoKZGovQgeMGbPKwUoObe0aQk6vMWWz9VhbMm8s+e6LTFlARg
        fdoE3b+iU6JDEoPVE+TVJmj+Tl8mO9AOm5DrdkRq4FvIh7IBPTRhrSsW3wFjkQ/lAGpFE56/Q0+QxKvZ
        Qc2b+LCVXgSfgeq4UnPP26QMokbZDWnuCf1IV+JumpAnjrJDUdvxud8irbrFAGbdjq5YUfmdm+YDZEXL
        2Dn/VI0AAAAASUVORK5CYII=
</value>
  </data>
</root>